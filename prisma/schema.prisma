// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres.ulqdcqaptsfsqsceyvsb:5MHottUpLxg9mS9G@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres"
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  password String
  balance  Float   @default(0.00)
  status   Boolean @default(false)
}

model Contact {
  id     Int     @id @default(autoincrement())
  name   String?
  number String
  userId Int

  singleCall SingleCall[]
}

model AgentNumber {
  id         Int     @id @default(autoincrement())
  number     String?
  purchaseId String
  userId     Int

  agent Agent[]
}

model Agent {
  id        Int     @id @default(autoincrement())
  name      String?
  agentType String
  voice     String
  prompt    String
  numberId  Int
  userId    Int

  agentNumber       AgentNumber   @relation(fields: [numberId], references: [id])
  call      SingleCall[]
  Campaigns Campaigns[]
}

model SingleCall {
  id          Int     @id @default(autoincrement())
  agentId     Int
  agent       Agent   @relation(fields: [agentId], references: [id])
  callId      String  @unique
  contactId   Int
  contact     Contact @relation(fields: [contactId], references: [id])
  cost        Float   @default(0.00)
  status      String?
  time        String?
  maxDuration Int?
  userId      Int
}

model Campaigns {
  id         Int      @id @default(autoincrement())
  name       String
  agentId    Int
  agent      Agent    @relation(fields: [agentId], references: [id])
  campaignId String
  cost       Float    @default(0.00)
  status     String?
  userId     Int
}
